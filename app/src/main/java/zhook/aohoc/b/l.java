package zhook.aohoc.b;

/* JADX INFO: Access modifiers changed from: package-private */
/* loaded from: classes.dex */
public final class l {
    static final int[] a = {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0};
    static final int[] b = {0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13};
    static final int[] c = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7};
    static final byte[] d = {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};
    static final byte[] e = {0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29};
    static final byte[] f = {0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28};
    static final int[] g = {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0};
    static final int[] h = {0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384, 24576};
    short[] i;
    int j;
    j k;

    /* JADX INFO: Access modifiers changed from: package-private */
    public static int a(int i) {
        return i < 256 ? e[i] : e[(i >>> 7) + 256];
    }

    static int a(int i, int i2) {
        int i3 = 0;
        do {
            i >>>= 1;
            i3 = (i3 | (i & 1)) << 1;
            i2--;
        } while (i2 > 0);
        return i3 >>> 1;
    }

    static void a(short[] sArr, int i, short[] sArr2) {
        short[] sArr3 = new short[16];
        short s = 0;
        for (int i2 = 1; i2 <= 15; i2++) {
            s = (short) ((s + sArr2[i2 - 1]) << 1);
            sArr3[i2] = s;
        }
        for (int i3 = 0; i3 <= i; i3++) {
            short s2 = sArr[(i3 * 2) + 1];
            if (s2 != 0) {
                short s3 = sArr3[s2];
                sArr3[s2] = (short) (s3 + 1);
                sArr[i3 * 2] = (short) a(s3, s2);
            }
        }
    }

    /* JADX WARN: Multi-variable type inference failed */
    void a(b bVar) {
        short[] sArr;
        short[] sArr2;
        short[] sArr3 = this.i;
        short[] sArr4 = this.k.f;
        int[] iArr = this.k.g;
        int i = this.k.h;
        int i2 = this.k.j;
        for (int i3 = 0; i3 <= 15; i3++) {
            bVar.Q[i3] = 0;
        }
        sArr3[(bVar.R[bVar.T] * 2) + 1] = 0;
        int i4 = bVar.T + 1;
        int i5 = 0;
        while (i4 < 573) {
            int i6 = bVar.R[i4];
            int i7 = sArr3[(sArr3[(i6 * 2) + 1] * 2) + 1] + 1;
            if (i7 > i2) {
                i5++;
                i7 = i2;
            }
            sArr3[(i6 * 2) + 1] = (short) i7;
            if (i6 <= this.j) {
                short[] sArr5 = bVar.Q;
                sArr5[i7] = (short) (sArr5[i7] + 1);
                int i8 = i6 >= i ? iArr[i6 - i] : 0;
                short s = sArr3[i6 * 2];
                bVar.Z = ((i7 + i8) * s) + bVar.Z;
                if (sArr4 != null) {
                    bVar.aa += (i8 + sArr4[(i6 * 2) + 1]) * s;
                }
            }
            i4++;
        }
        if (i5 == 0) {
            return;
        }
        do {
            int i9 = i2 - 1;
            while (bVar.Q[i9] == 0) {
                i9--;
            }
            bVar.Q[i9] = (short) (sArr[i9] - 1);
            short[] sArr6 = bVar.Q;
            int i10 = i9 + 1;
            sArr6[i10] = (short) (sArr6[i10] + 2);
            bVar.Q[i2] = (short) (sArr2[i2] - 1);
            i5 -= 2;
        } while (i5 > 0);
        int i11 = i4;
        while (i2 != 0) {
            short s2 = bVar.Q[i2];
            while (s2 != 0) {
                i11--;
                int i12 = bVar.R[i11];
                if (i12 <= this.j) {
                    if (sArr3[(i12 * 2) + 1] != i2) {
                        bVar.Z = (int) (bVar.Z + ((i2 - sArr3[(i12 * 2) + 1]) * sArr3[i12 * 2]));
                        sArr3[(i12 * 2) + 1] = (short) i2;
                    }
                    s2--;
                }
            }
            i2--;
        }
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public void b(b bVar) {
        int i;
        short[] sArr = this.i;
        short[] sArr2 = this.k.f;
        int i2 = this.k.i;
        int i3 = -1;
        bVar.S = 0;
        bVar.T = 573;
        for (int i4 = 0; i4 < i2; i4++) {
            if (sArr[i4 * 2] != 0) {
                int[] iArr = bVar.R;
                int i5 = bVar.S + 1;
                bVar.S = i5;
                iArr[i5] = i4;
                bVar.U[i4] = 0;
                i3 = i4;
            } else {
                sArr[(i4 * 2) + 1] = 0;
            }
        }
        while (bVar.S < 2) {
            int[] iArr2 = bVar.R;
            int i6 = bVar.S + 1;
            bVar.S = i6;
            if (i3 < 2) {
                i3++;
                i = i3;
            } else {
                i = 0;
            }
            iArr2[i6] = i;
            sArr[i * 2] = 1;
            bVar.U[i] = 0;
            bVar.Z--;
            if (sArr2 != null) {
                bVar.aa -= sArr2[(i * 2) + 1];
            }
        }
        this.j = i3;
        for (int i7 = bVar.S / 2; i7 >= 1; i7--) {
            bVar.a(sArr, i7);
        }
        int i8 = i2;
        while (true) {
            int i9 = bVar.R[1];
            int[] iArr3 = bVar.R;
            int[] iArr4 = bVar.R;
            int i10 = bVar.S;
            bVar.S = i10 - 1;
            iArr3[1] = iArr4[i10];
            bVar.a(sArr, 1);
            int i11 = bVar.R[1];
            int[] iArr5 = bVar.R;
            int i12 = bVar.T - 1;
            bVar.T = i12;
            iArr5[i12] = i9;
            int[] iArr6 = bVar.R;
            int i13 = bVar.T - 1;
            bVar.T = i13;
            iArr6[i13] = i11;
            sArr[i8 * 2] = (short) (sArr[i9 * 2] + sArr[i11 * 2]);
            bVar.U[i8] = (byte) (Math.max((int) bVar.U[i9], (int) bVar.U[i11]) + 1);
            short s = (short) i8;
            sArr[(i11 * 2) + 1] = s;
            sArr[(i9 * 2) + 1] = s;
            int i14 = i8 + 1;
            bVar.R[1] = i8;
            bVar.a(sArr, 1);
            if (bVar.S < 2) {
                int[] iArr7 = bVar.R;
                int i15 = bVar.T - 1;
                bVar.T = i15;
                iArr7[i15] = bVar.R[1];
                a(bVar);
                a(sArr, i3, bVar.Q);
                return;
            }
            i8 = i14;
        }
    }
}
